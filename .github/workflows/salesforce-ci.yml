name: Salesforce CI/CD Practice

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 1'  # Runs weekly

jobs:
  salesforce-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Salesforce CLI
        run: npm install -g sfdx-cli

      - name: Authenticate with Salesforce
        run: |
          echo "${{ secrets.SF_AUTH_URL }}" > sfdx_auth.txt
          sfdx force:auth:sfdxurl:store -f sfdx_auth.txt --setalias ci-scratch-org --setdefaultusername
          sfdx force:config:set instanceUrl=https://login.salesforce.com --global

      - name: Run Apex Tests (Skip if No Tests Exist)
        run: |
          if sfdx force:apex:test:list -u ci-scratch-org --json | jq -e '.result | length > 0' > /dev/null; then
            echo "Running Apex Tests..."
            sfdx force:apex:test:run -u ci-scratch-org --resultformat tap --codecoverage
          else
            echo "⚠️ No Apex test classes found, skipping tests."
          fi

  rotate-aws-keys:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/github-rotation-role
          aws-region: us-east-1

      - name: Invoke Lambda Function for Password Rotation
        run: |
          NEW_KEYS=$(aws lambda invoke --function-name passwordRotation --payload '{}' response.json && cat response.json)
          echo "New Access Key: $NEW_KEYS"

      - name: Update GitHub Secrets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ACCESS_KEY=$(echo $NEW_KEYS | jq -r '.AccessKeyId')
          SECRET_KEY=$(echo $NEW_KEYS | jq -r '.SecretAccessKey')
          
          curl -X PUT -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/YOUR_REPO/actions/secrets/AWS_ACCESS_KEY_ID \
            -d "{\"encrypted_value\":\"$ACCESS_KEY\"}"
          
          curl -X PUT -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/YOUR_REPO/actions/secrets/AWS_SECRET_ACCESS_KEY \
            -d "{\"encrypted_value\":\"$SECRET_KEY\"}"
