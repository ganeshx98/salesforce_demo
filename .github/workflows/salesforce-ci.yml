name: Salesforce CI/CD Practice

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_run:
    workflows: ["Salesforce CI/CD Practice"]
    types: 
      - completed  # Triggers when workflow completes

jobs:
  salesforce-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Salesforce CLI
        run: npm install -g sfdx-cli

      - name: Authenticate with Salesforce
        run: |
          echo "${{ secrets.EMAIL_USERNAME }}" > sfdx_auth.txt
          sfdx force:auth:sfdxurl:store -f sfdx_auth.txt --setalias ci-scratch-org --setdefaultusername
          sfdx force:config:set instanceUrl=https://login.salesforce.com --global
          echo "üîç Checking Authenticated Orgs:"
          sfdx force:org:list || echo "‚ùå No orgs found!"
          echo "üîç Checking if ci-scratch-org is authenticated:"
          sfdx force:org:display -u ci-scratch-org || echo "‚ùå Authentication Failed!"

      - name: Verify Authentication
        run: |
          echo "üîç Verifying authentication for ci-scratch-org..."
          sfdx force:org:display -u ci-scratch-org || echo "‚ùå Authentication verification failed!"

      - name: Create Scratch Org
        run: |
          echo "üöÄ Creating Scratch Org..."
          sfdx force:org:create -f config/project-scratch-def.json -a ci-scratch-org -s -d 1 || echo "‚ùå Scratch Org Creation Failed!"
          echo "üîç Checking created orgs:"
          sfdx force:org:list || echo "‚ùå No orgs found!"
          echo "üîç Checking if ci-scratch-org exists after creation:"
          sfdx force:org:display -u ci-scratch-org || echo "‚ùå Scratch Org Not Found!"

      - name: Push Source to Scratch Org
        run: |
          echo "üöÄ Pushing source to Scratch Org..."
          sfdx force:source:push -u ci-scratch-org || echo "‚ùå Source Push Failed!"

      - name: Run Apex Tests
        run: |
          echo "üõ† Running Apex Tests..."
          sfdx force:apex:test:run -u ci-scratch-org --resultformat tap --codecoverage || echo "‚ùå Apex Tests Failed!"

      - name: Delete Scratch Org (Ignore Errors)
        if: always()
        run: |
          echo "üóë Deleting Scratch Org..."
          sfdx force:org:list || echo "‚ö†Ô∏è No orgs found!"
          sfdx force:org:delete -u ci-scratch-org --noprompt || echo "‚ö†Ô∏è Scratch Org Not Found, Skipping Deletion."

  notify:
    needs: salesforce-ci
    runs-on: ubuntu-latest
    steps:
      - name: Send Email on Failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚ùå Salesforce CI/CD Workflow Failed!"
          body: "Your Salesforce CI/CD pipeline has failed. Check GitHub Actions logs for details."
          to: your-email@gmail.com
          from: "GitHub Actions <your-email@gmail.com>"

      - name: Send Email on Success
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚úÖ Salesforce CI/CD Workflow Succeeded!"
          body: "Your Salesforce CI/CD pipeline ran successfully! üéâ"
          to: your-email@gmail.com
          from: "GitHub Actions <your-email@gmail.com>"
